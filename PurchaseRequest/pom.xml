<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.alfresco.extension</groupId>
	<artifactId>purchase-request</artifactId>
	<packaging>jar</packaging>
	<!-- Comment the previous line and uncomment the following line if you wish 
		to generate an Eclipse project. The Maven Eclipse plugin does the wrong thing 
		if packaging != jar. -->
	<!-- <packaging>amp</packaging> -->
	<name>Alfresco showcase - purchase request (repository module for Alfresco 3.4 and later)</name>
	<version>0.1</version>


	<properties>
		<env>local</env>
		<artifact.file>${project.build.directory}/${project.build.finalName}.${project.packaging}</artifact.file>
		<alfresco.target.dir>c:/alfresco/nec_alfresco3.4/tomcat/webapps/alfresco/WEB-INF/lib</alfresco.target.dir>
		<java.version>1.6</java.version>
		<alfresco.version>3.4.0RC1</alfresco.version>
		<alfresco.classifier>enterprise</alfresco.classifier>
		<!-- WAR Runtime properties -->
		<alfresco.data.location>c:/temp/temp_datalocation</alfresco.data.location>
		<alfresco.db.name>alf_test</alfresco.db.name>
		<alfresco.db.username>alf_test</alfresco.db.username>
		<alfresco.db.password>alf_test</alfresco.db.password>
	</properties>

	<repositories>
		<repository>
			<id>jboss-public</id>
			<name>JBoss Public Repository</name>
			<url>http://repository.jboss.com/maven2</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestone Repository</name>
			<url>https://extensions.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshot Repository</name>
			<url>https://extensions.springframework.org/snapshot</url>
		</repository>
		<repository>
			<id>alfresco-public</id>
			<name>Alfresco Public Repository</name>
			<url>http://maven.alfresco.com/nexus/content/repositories/releases</url>
		</repository>
		<repository>
			<id>alfresco-employee-repository</id>
			<name>Alfresco Employee Repository (private)</name>
			<url>https://svn.alfresco.com/repos/field/maven</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>alfresco-public</id>
			<name>Alfresco</name>
			<url>http://maven.alfresco.com/nexus/content/repositories/releases</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-deployment</artifactId>
			<version>${alfresco.version}</version>
			<classifier>${alfresco.classifier}</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-data-model</artifactId>
			<version>${alfresco.version}</version>
			<classifier>${alfresco.classifier}</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-core</artifactId>
			<version>${alfresco.version}</version>
			<classifier>${alfresco.classifier}</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-remote-api</artifactId>
			<version>${alfresco.version}</version>
			<classifier>${alfresco.classifier}</classifier>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.alfresco</groupId>
			<artifactId>alfresco-repository</artifactId>
			<version>${alfresco.version}</version>
			<classifier>${alfresco.classifier}</classifier>
			<scope>provided</scope>
		</dependency>
		<!-- Non-Alfresco dependencies -->
		<dependency>
			<groupId>org.springframework.extensions.surf</groupId>
			<artifactId>spring-webscripts-api</artifactId>
			<version>1.0.0.CI-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.0</version>
			<type>jar</type>
			<scope>test</scope>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<!-- Runtime properties file which is used to configure your Share instance. 
			It's multi-environment aware (-Denv=yourEnv) -->
		<filters>
			<filter>src/main/properties/${env}/application.properties</filter>
		</filters>

		<!-- Default profile to build as an Alfresco extension - resources are 
			copied into classpath -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<!-- | Include application properties file in classpath: this allows Spring 
				contexts to have customization properties available at | classpath:alfresco/extension/application.properties -->
			<resource>
				<directory>src/main/properties</directory>
				<includes>
					<include>application.properties</include>
				</includes>
				<!-- This gets loaded to be the filter for spring runtime placeholding, 
					so no need for build time filtering -->
				<targetPath>alfresco/web-extension</targetPath>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- IMPORTANT NOTE: Alfresco Enterprise 3.0+ is only supported on JDK 
						1.6 and above! -->
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.alfresco.maven.plugin</groupId>
				<artifactId>maven-amp-plugin</artifactId>
				<version>3.0.2</version>
				<extensions>true</extensions>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>false</archiveClasses>
					<filters>
						<filter>src/main/properties/${env}/application.properties</filter>
					</filters>
					<webResources></webResources>
				</configuration>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<id>deployJar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<copy file="${artifact.file}" todir="${alfresco.target.dir}"
											overwrite="true" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
      <!-- Invoke this with -Prun to run embedded jetty during your build -->
        <profile>
            <id>run</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <configuration>
                            <connectors>
                                <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                    <port>8080</port>
                                </connector>
                            </connectors>
                        </configuration>
                        <executions>
                          <execution>
                            <id>run-jetty</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                              <goal>run-exploded</goal>
                            </goals>
                          </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>		
	</profiles>

</project>